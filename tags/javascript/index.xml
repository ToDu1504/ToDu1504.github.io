<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on Khánh Vũ - Blog</title>
    <link>http://todu1504.github.io/tags/javascript/</link>
    <description>Recent content in JavaScript on Khánh Vũ - Blog</description>
    <generator>Hugo</generator>
    <language>vn-vi</language>
    <lastBuildDate>Fri, 24 Oct 2025 22:17:00 +0700</lastBuildDate>
    <atom:link href="http://todu1504.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Các tính năng mới trong ES6</title>
      <link>http://todu1504.github.io/posts/es6-co-ban/</link>
      <pubDate>Fri, 24 Oct 2025 22:17:00 +0700</pubDate>
      <guid>http://todu1504.github.io/posts/es6-co-ban/</guid>
      <description>&lt;h2 id=&#34;-giới-thiệu&#34;&gt;🚀 Giới thiệu&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;ES6 (ECMAScript 2015)&lt;/strong&gt; là bản cập nhật lớn của JavaScript, mang lại nhiều cú pháp mới giúp code &lt;strong&gt;ngắn gọn, dễ đọc, dễ bảo trì hơn&lt;/strong&gt;.&lt;br&gt;&#xA;Dưới đây là &lt;strong&gt;những tính năng quan trọng nhất mà lập trình viên JS hiện đại phải biết&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-1-let-và-const&#34;&gt;🔹 1. &lt;code&gt;let&lt;/code&gt; và &lt;code&gt;const&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Trước đây, ta dùng &lt;code&gt;var&lt;/code&gt; để khai báo biến — nhưng &lt;code&gt;var&lt;/code&gt; có nhiều vấn đề về &lt;strong&gt;scope&lt;/strong&gt;.&lt;br&gt;&#xA;ES6 giới thiệu hai cách khai báo mới: &lt;code&gt;let&lt;/code&gt; và &lt;code&gt;const&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Thao tác DOM trong JavaScript</title>
      <link>http://todu1504.github.io/posts/dom-manipulation/</link>
      <pubDate>Fri, 24 Oct 2025 22:03:00 +0700</pubDate>
      <guid>http://todu1504.github.io/posts/dom-manipulation/</guid>
      <description>&lt;h2 id=&#34;-giới-thiệu&#34;&gt;🧩 Giới thiệu&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;DOM (Document Object Model)&lt;/strong&gt; là cầu nối giữa &lt;strong&gt;JavaScript và HTML&lt;/strong&gt;.&lt;br&gt;&#xA;Nhờ DOM, JavaScript có thể &lt;strong&gt;truy cập, thay đổi, thêm hoặc xóa&lt;/strong&gt; các phần tử trong trang web.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-1-dom-là-gì&#34;&gt;🔹 1. DOM là gì?&lt;/h2&gt;&#xA;&lt;p&gt;DOM là &lt;strong&gt;mô hình dạng cây&lt;/strong&gt; mô tả cấu trúc của tài liệu HTML.&lt;br&gt;&#xA;Mỗi thẻ HTML là &lt;strong&gt;một nút (node)&lt;/strong&gt; trong cây DOM.&lt;/p&gt;&#xA;&lt;p&gt;Ví dụ HTML:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;Xin chào&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Đây là ví dụ DOM.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Cấu trúc DOM sẽ như sau:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Những kiểu dữ liệu trong JavaScript</title>
      <link>http://todu1504.github.io/posts/kieu-du-lieu-trong-js/</link>
      <pubDate>Fri, 24 Oct 2025 21:56:00 +0700</pubDate>
      <guid>http://todu1504.github.io/posts/kieu-du-lieu-trong-js/</guid>
      <description>&lt;h2 id=&#34;-giới-thiệu&#34;&gt;🧠 Giới thiệu&lt;/h2&gt;&#xA;&lt;p&gt;Trong JavaScript, &lt;strong&gt;kiểu dữ liệu (Data Type)&lt;/strong&gt; là nền tảng giúp bạn hiểu và kiểm soát cách chương trình hoạt động.&lt;br&gt;&#xA;Ngôn ngữ này &lt;strong&gt;phân loại dữ liệu thành 2 nhóm chính&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Primitive (nguyên thủy)&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reference (tham chiếu)&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Hiểu rõ sự khác biệt giữa hai loại này giúp tránh nhiều lỗi khó chịu khi lập trình.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-1-kiểu-dữ-liệu-nguyên-thủy-primitive-types&#34;&gt;🔹 1. Kiểu dữ liệu nguyên thủy (Primitive Types)&lt;/h2&gt;&#xA;&lt;p&gt;Kiểu nguyên thủy là &lt;strong&gt;dữ liệu không thể thay đổi trực tiếp (immutable)&lt;/strong&gt;.&lt;br&gt;&#xA;JavaScript có &lt;strong&gt;7 kiểu nguyên thủy&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cách debug ứng dụng JavaScript</title>
      <link>http://todu1504.github.io/posts/debug-javascript/</link>
      <pubDate>Fri, 24 Oct 2025 21:35:00 +0700</pubDate>
      <guid>http://todu1504.github.io/posts/debug-javascript/</guid>
      <description>&lt;h2 id=&#34;-giới-thiệu&#34;&gt;🧠 Giới thiệu&lt;/h2&gt;&#xA;&lt;p&gt;Khi lập trình JavaScript, lỗi là điều không thể tránh khỏi.&lt;br&gt;&#xA;Vì vậy, &lt;strong&gt;debug (gỡ lỗi)&lt;/strong&gt; là kỹ năng cực kỳ quan trọng giúp lập trình viên &lt;strong&gt;phát hiện và sửa lỗi nhanh chóng&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Bài viết này sẽ hướng dẫn các cách debug hiệu quả trong JavaScript — từ cơ bản đến nâng cao.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-dùng-consolelog&#34;&gt;1. Dùng &lt;code&gt;console.log()&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Cách phổ biến nhất để kiểm tra giá trị biến:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tìm hiểu Async/Await trong JavaScript</title>
      <link>http://todu1504.github.io/posts/async-await/</link>
      <pubDate>Mon, 20 Oct 2025 11:10:00 +0700</pubDate>
      <guid>http://todu1504.github.io/posts/async-await/</guid>
      <description>&lt;p&gt;Async/Await giúp viết code bất đồng bộ (asynchronous) dễ đọc như đồng bộ.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-cách-hoạt-động-của-asyncawait&#34;&gt;🔹 Cách hoạt động của Async/Await&lt;/h2&gt;&#xA;&lt;h3 id=&#34;-1-từ-khóa-async&#34;&gt;🔸 1. Từ khóa &lt;code&gt;async&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Khi bạn đặt từ khóa &lt;code&gt;async&lt;/code&gt; trước một hàm, hàm đó sẽ &lt;strong&gt;tự động trả về một Promise&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Bất cứ giá trị nào được &lt;code&gt;return&lt;/code&gt; trong hàm &lt;code&gt;async&lt;/code&gt; sẽ được &lt;strong&gt;bọc trong Promise.resolve()&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Ví dụ:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sayHello&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Xin chào!&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sayHello&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// → Xin chào!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;-2-từ-khóa-await&#34;&gt;🔸 2. Từ khóa await&lt;/h3&gt;&#xA;&lt;p&gt;Chỉ có thể dùng bên trong hàm async.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
